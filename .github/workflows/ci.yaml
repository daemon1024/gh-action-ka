name: Runtime-risks
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  Tests:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:

    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Checkout kubearmor repo
      #      - name: Installing Prerequisites (Kind Cluster)
      #        uses: helm/kind-action@v1.4.0

      uses: actions/checkout@v3
      with:
        repository: kubearmor/KubeArmor
        ref: main
        path: Kubearmor

    - uses: actions/setup-go@v3
      with:
        go-version: "v1.20"

    - name: Setup a Kubernetes environment
      #      - name: Install the latest LLVM toolchain
      #        run: ./Kubearmor/.github/workflows/install-llvm.sh
      #
      #      - name: Compile libbpf
      #        run: |
      #          ls
      #          cd Kubearmor
      #          ls
      #          cd KubeArmor/BPF
      #          git submodule update --init --recursive
      #          ls
      #          make -C libbpf/src

      run: ./Kubearmor/contribution/k3s/install_k3s.sh

    - name: Configuring and testing the Installation for cluster
      run: |
        kubectl wait --for=condition=Ready nodes --all --timeout=120s
        sudo apt install socat

    - name: Checkout accuknox-cli repo
      uses: actions/checkout@v3
      with:
        repository: rajaSahil/accuknox-cli
        ref: feat-report
        path: accuknox-cli

    - name: Install accuknox-cli, kubearmor and discovery engine
      run: |
        cd accuknox-cli
        ./accuknox-cli version
        ./accuknox-cli install
        kubectl get pods -A
        kubectl describe pod $(kubectl get pods -l app=discovery-engine -A -o jsonpath='{.items[0].metadata.name}') -n accuknox-agents
        sleep 30
        kubectl describe pod $(kubectl get pods -l app=discovery-engine -A -o jsonpath='{.items[0].metadata.name}') -n accuknox-agents


    - name: Deploy test application
      run: |
        kubectl create deployment nginx --image=nginx
        POD=$(kubectl get pod -l app=nginx -o name)

      #      - name: Install helm and kube-prometheus-stack
      #        run: |
      #          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
      #          chmod 700 get_helm.sh
      #          ./get_helm.sh
      #          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      #          helm repo update
      #          helm install kps prometheus-community/kube-prometheus-stack

    - name: Test KubeArmor using Ginkgo
      run: |
        cd Kubearmor
        go install -mod=mod github.com/onsi/ginkgo/v2/ginkgo
        make -C tests/
      timeout-minutes: 30

    - name: Generate report
      run: |
        mkdir downloads
        touch table
        ./accuknox-cli/accuknox-cli report -b "baseline/report.json" > downloads/table
        cat downloads/table
        mv /tmp/report-*.json downloads/report.json
        mv /tmp/diff-report-*.json downloads/diff-report.json
        mv /tmp/diff-report-*.md downloads/diff-report.md


    - name: Upload artifects
      uses: actions/upload-artifact@v2
      with:
        name: Baseline report
        path: downloads

    - name: PR comment with file
      uses: thollander/actions-comment-pull-request@v2
      with:
        filePath: downloads/diff-report.md
